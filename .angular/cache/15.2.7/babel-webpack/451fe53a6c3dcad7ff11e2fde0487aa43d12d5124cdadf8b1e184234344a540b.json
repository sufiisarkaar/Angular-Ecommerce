{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"src/app/services/users.service\";\nimport * as i3 from \"src/app/services/item-service.service\";\nimport * as i4 from \"src/app/services/seller.service\";\nimport * as i5 from \"@angular/router\";\nexport class LoginComponent {\n  constructor(fb, userS, item, sellerSer) {\n    this.fb = fb;\n    this.userS = userS;\n    this.item = item;\n    this.sellerSer = sellerSer;\n    this.loginForm = this.fb.group({\n      'email': this.fb.control('', [Validators.required, Validators.email]),\n      'password': this.fb.control('', [Validators.required])\n    });\n  }\n  ngOnInit() {\n    this.emitUser();\n    this.checkSeller();\n  }\n  loggedIn(value) {\n    if (this.loginForm.valid) {\n      this.userS.userLogin(value);\n    }\n  }\n  // checkUser() {\n  //   let user: any = localStorage.getItem(\"user\");\n  //   let UserId = user && JSON.parse(user).data.id;\n  //   if (UserId) {\n  //   this.item.ActiveUser.emit(true);\n  //   }\n  // }\n  emitUser() {\n    let user = localStorage.getItem(\"user\");\n    let userVerify = user && JSON.parse(user).data.id;\n    if (userVerify) {\n      this.item.ActiveUser.emit(true);\n    }\n  }\n  checkSeller() {\n    let seller = localStorage.getItem(\"seller\");\n    let sellerVerify = seller && JSON.parse(seller).data.id;\n    if (sellerVerify) {\n      this.sellerSer.sellerActive.emit(true);\n    }\n  }\n}\nLoginComponent.ɵfac = function LoginComponent_Factory(t) {\n  return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.UsersService), i0.ɵɵdirectiveInject(i3.ItemServiceService), i0.ɵɵdirectiveInject(i4.SellerService));\n};\nLoginComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: LoginComponent,\n  selectors: [[\"app-login\"]],\n  decls: 19,\n  vars: 1,\n  consts: [[1, \"container\"], [1, \"row\", \"d-flex\", \"justify-content-center\"], [1, \"col-6\", \"mt-5\", \"mb-5\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"formInput\", \"mt-2\", \"mb-2\"], [\"for\", \"\"], [\"type\", \"email\", \"formControlName\", \"email\", \"id\", \"\", 1, \"form-control\"], [\"type\", \"password\", \"formControlName\", \"password\", \"id\", \"\", 1, \"form-control\"], [1, \"loginBtn\", \"mt-4\", \"d-flex\", \"justify-content-between\"], [1, \"btn\", \"btn-success\", \"col-12\", \"col-sm-4\"], [1, \"col-12\", \"col-sm-6\"], [\"routerLink\", \"/signup\"]],\n  template: function LoginComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"form\", 3);\n      i0.ɵɵlistener(\"ngSubmit\", function LoginComponent_Template_form_ngSubmit_3_listener() {\n        return ctx.loggedIn(ctx.loginForm.value);\n      });\n      i0.ɵɵelementStart(4, \"div\", 4)(5, \"label\", 5);\n      i0.ɵɵtext(6, \"Email\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(7, \"input\", 6);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"div\", 4)(9, \"label\", 5);\n      i0.ɵɵtext(10, \"Password\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(11, \"input\", 7);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(12, \"div\", 8)(13, \"button\", 9);\n      i0.ɵɵtext(14, \"Login\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(15, \"p\", 10);\n      i0.ɵɵtext(16, \"Don't Have Account? \");\n      i0.ɵɵelementStart(17, \"a\", 11);\n      i0.ɵɵtext(18, \"Signup Here!\");\n      i0.ɵɵelementEnd()()()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"formGroup\", ctx.loginForm);\n    }\n  },\n  dependencies: [i5.RouterLink, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"AACA,SAAiCA,UAAU,QAAQ,gBAAgB;;;;;;;AAUnE,OAAM,MAAOC,cAAc;EAGzBC,YAAoBC,EAAe,EAAUC,KAAmB,EAAUC,IAAuB,EAAUC,SAAuB;IAA9G,OAAE,GAAFH,EAAE;IAAuB,UAAK,GAALC,KAAK;IAAwB,SAAI,GAAJC,IAAI;IAA6B,cAAS,GAATC,SAAS;IAClH,IAAI,CAACC,SAAS,GAAG,IAAI,CAACJ,EAAE,CAACK,KAAK,CAAC;MAC7B,OAAO,EAAE,IAAI,CAACL,EAAE,CAACM,OAAO,CAAC,EAAE,EAAE,CAACT,UAAU,CAACU,QAAQ,EAAEV,UAAU,CAACW,KAAK,CAAC,CAAC;MACrE,UAAU,EAAE,IAAI,CAACR,EAAE,CAACM,OAAO,CAAC,EAAE,EAAE,CAACT,UAAU,CAACU,QAAQ,CAAC;KACtD,CAAC;EACJ;EAEAE,QAAQ;IACN,IAAI,CAACC,QAAQ,EAAE;IACf,IAAI,CAACC,WAAW,EAAE;EACpB;EAGAC,QAAQ,CAACC,KAAU;IACjB,IAAI,IAAI,CAACT,SAAS,CAACU,KAAK,EAAE;MACxB,IAAI,CAACb,KAAK,CAACc,SAAS,CAACF,KAAK,CAAC;;EAE/B;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EAEAH,QAAQ;IACN,IAAIM,IAAI,GAAGC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC;IACvC,IAAIC,UAAU,GAAGH,IAAI,IAAII,IAAI,CAACC,KAAK,CAACL,IAAI,CAAC,CAACM,IAAI,CAACC,EAAE;IACjD,IAAGJ,UAAU,EAAC;MACf,IAAI,CAACjB,IAAI,CAACsB,UAAU,CAACC,IAAI,CAAC,IAAI,CAAC;;EAEhC;EAEAd,WAAW;IACT,IAAIe,MAAM,GAAGT,YAAY,CAACC,OAAO,CAAC,QAAQ,CAAC;IAC3C,IAAIS,YAAY,GAAGD,MAAM,IAAIN,IAAI,CAACC,KAAK,CAACK,MAAM,CAAC,CAACJ,IAAI,CAACC,EAAE;IACvD,IAAGI,YAAY,EAAC;MACjB,IAAI,CAACxB,SAAS,CAACyB,YAAY,CAACH,IAAI,CAAC,IAAI,CAAC;;EAEvC;;AA5CW3B,cAAc;mBAAdA,cAAc;AAAA;AAAdA,cAAc;QAAdA,cAAc;EAAA+B;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCX3BC,8BAAuB;MAGaA;QAAA,OAAYC,iCAAyB;MAAA,EAAC;MAElED,8BAAiC;MACjBA,qBAAK;MAAAA,iBAAQ;MAC3BA,2BAAuE;MACzEA,iBAAM;MAENA,8BAAiC;MACjBA,yBAAQ;MAAAA,iBAAQ;MAC9BA,4BAA6E;MAC/EA,iBAAM;MAENA,+BAA0D;MACRA,sBAAK;MAAAA,iBAAS;MAC9DA,8BAA2B;MAAAA,qCAAoB;MAAAA,8BAAwB;MAAAA,6BAAY;MAAAA,iBAAI;;;MAdrFA,eAAuB;MAAvBA,yCAAuB","names":["Validators","LoginComponent","constructor","fb","userS","item","sellerSer","loginForm","group","control","required","email","ngOnInit","emitUser","checkSeller","loggedIn","value","valid","userLogin","user","localStorage","getItem","userVerify","JSON","parse","data","id","ActiveUser","emit","seller","sellerVerify","sellerActive","selectors","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["E:\\AngularWithLaravelAPI\\AngularFrontEnd\\src\\app\\components\\login\\login.component.ts","E:\\AngularWithLaravelAPI\\AngularFrontEnd\\src\\app\\components\\login\\login.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ItemServiceService } from 'src/app/services/item-service.service';\nimport { SellerService } from 'src/app/services/seller.service';\nimport { UsersService } from 'src/app/services/users.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n  loginForm: FormGroup;\n\n  constructor(private fb: FormBuilder, private userS: UsersService, private item:ItemServiceService, private sellerSer:SellerService) {\n    this.loginForm = this.fb.group({\n      'email': this.fb.control('', [Validators.required, Validators.email]),\n      'password': this.fb.control('', [Validators.required]),\n    })\n  }\n\n  ngOnInit(): void {\n    this.emitUser();\n    this.checkSeller();\n  }\n\n\n  loggedIn(value: any) {\n    if (this.loginForm.valid) {\n      this.userS.userLogin(value);\n    }\n  }\n\n  // checkUser() {\n  //   let user: any = localStorage.getItem(\"user\");\n  //   let UserId = user && JSON.parse(user).data.id;\n  //   if (UserId) {\n  //   this.item.ActiveUser.emit(true);\n  //   }\n  // }\n\n  emitUser() {\n    let user = localStorage.getItem(\"user\");\n    let userVerify = user && JSON.parse(user).data.id\n    if(userVerify){\n   this.item.ActiveUser.emit(true);\n  }\n  }\n\n  checkSeller(){\n    let seller = localStorage.getItem(\"seller\");\n    let sellerVerify = seller && JSON.parse(seller).data.id\n    if(sellerVerify){\n   this.sellerSer.sellerActive.emit(true);\n  }\n  }\n\n}\n","<div class=\"container\">\n  <div class=\"row d-flex justify-content-center\">\n    <div class=\"col-6 mt-5 mb-5\">\n      <form [formGroup]=\"loginForm\" (ngSubmit)=\"loggedIn(loginForm.value)\">\n\n        <div class=\"formInput mt-2 mb-2\">\n          <label for=\"\">Email</label>\n          <input type=\"email\" formControlName=\"email\" id=\"\" class=\"form-control\">\n        </div>\n\n        <div class=\"formInput mt-2 mb-2\">\n          <label for=\"\">Password</label>\n          <input type=\"password\" formControlName=\"password\" id=\"\" class=\"form-control\">\n        </div>\n\n        <div class=\"loginBtn mt-4 d-flex justify-content-between\">\n          <button class=\"btn btn-success col-12 col-sm-4\">Login</button>\n          <p class=\"col-12 col-sm-6\">Don't Have Account? <a routerLink=\"/signup\">Signup Here!</a></p>\n        </div>\n      </form>\n    </div>\n  </div>\n</div>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}