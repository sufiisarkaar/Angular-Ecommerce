{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { Validators } from '@angular/forms';\nlet SellerDashboardComponent = class SellerDashboardComponent {\n  constructor(sellerSer, IS, router, fb) {\n    this.sellerSer = sellerSer;\n    this.IS = IS;\n    this.router = router;\n    this.fb = fb;\n    this.sellerAddProduct = this.fb.group({\n      item_name: this.fb.control('', [Validators.required]),\n      item_price: this.fb.control('', [Validators.required]),\n      item_discount: this.fb.control('', [Validators.required]),\n      item_qty: this.fb.control('', [Validators.required]),\n      item_image: this.fb.control('', [Validators.required]),\n      item_dsc: this.fb.control('', [Validators.required])\n    });\n  }\n  ngOnInit() {\n    this.checkSeller();\n    this.getItems();\n  }\n  checkSeller() {\n    let seller = localStorage.getItem(\"seller\");\n    let sellerVerify = seller && JSON.parse(seller).data.id;\n    if (sellerVerify) {\n      this.sellerSer.sellerActive.emit(true);\n    }\n  }\n  getItems() {\n    this.IS.getItems().subscribe(res => {\n      this.itemList = res.Result;\n    });\n  }\n  UpdatePro(item) {\n    console.log(item);\n  }\n  ProductUpdate(value) {}\n};\nSellerDashboardComponent = __decorate([Component({\n  selector: 'app-seller-dashboard',\n  templateUrl: './seller-dashboard.component.html',\n  styleUrls: ['./seller-dashboard.component.scss']\n})], SellerDashboardComponent);\nexport { SellerDashboardComponent };","map":{"version":3,"mappings":";AAAA,SAASA,SAAS,QAAgB,eAAe;AACjD,SAAoBC,UAAU,QAAQ,gBAAgB;AAU/C,IAAMC,wBAAwB,GAA9B,MAAMA,wBAAwB;EAIrCC,YAAoBC,SAAuB,EAAUC,EAAqB,EAAUC,MAAa,EAAUC,EAAM;IAA7F,cAAS,GAATH,SAAS;IAAwB,OAAE,GAAFC,EAAE;IAA6B,WAAM,GAANC,MAAM;IAAiB,OAAE,GAAFC,EAAE;IAC3G,IAAI,CAACC,gBAAgB,GAAG,IAAI,CAACD,EAAE,CAACE,KAAK,CAAC;MACpCC,SAAS,EAAG,IAAI,CAACH,EAAE,CAACI,OAAO,CAAC,EAAE,EAAC,CAACV,UAAU,CAACW,QAAQ,CAAC,CAAC;MACrDC,UAAU,EAAG,IAAI,CAACN,EAAE,CAACI,OAAO,CAAC,EAAE,EAAC,CAACV,UAAU,CAACW,QAAQ,CAAC,CAAC;MACtDE,aAAa,EAAG,IAAI,CAACP,EAAE,CAACI,OAAO,CAAC,EAAE,EAAC,CAACV,UAAU,CAACW,QAAQ,CAAC,CAAC;MACzDG,QAAQ,EAAG,IAAI,CAACR,EAAE,CAACI,OAAO,CAAC,EAAE,EAAC,CAACV,UAAU,CAACW,QAAQ,CAAC,CAAC;MACpDI,UAAU,EAAG,IAAI,CAACT,EAAE,CAACI,OAAO,CAAC,EAAE,EAAC,CAACV,UAAU,CAACW,QAAQ,CAAC,CAAC;MACtDK,QAAQ,EAAG,IAAI,CAACV,EAAE,CAACI,OAAO,CAAC,EAAE,EAAC,CAACV,UAAU,CAACW,QAAQ,CAAC;KACpD,CAAC;EACJ;EAEAM,QAAQ;IACN,IAAI,CAACC,WAAW,EAAE;IAClB,IAAI,CAACC,QAAQ,EAAE;EACjB;EAEAD,WAAW;IACT,IAAIE,MAAM,GAAGC,YAAY,CAACC,OAAO,CAAC,QAAQ,CAAC;IAC3C,IAAIC,YAAY,GAAGH,MAAM,IAAII,IAAI,CAACC,KAAK,CAACL,MAAM,CAAC,CAACM,IAAI,CAACC,EAAE;IACvD,IAAGJ,YAAY,EAAC;MACjB,IAAI,CAACpB,SAAS,CAACyB,YAAY,CAACC,IAAI,CAAC,IAAI,CAAC;;EAEvC;EAIAV,QAAQ;IACN,IAAI,CAACf,EAAE,CAACe,QAAQ,EAAE,CAACW,SAAS,CAAEC,GAAQ,IAAI;MACxC,IAAI,CAACC,QAAQ,GAAGD,GAAG,CAACE,MAAM;IAC5B,CAAC,CAAC;EACJ;EAEAC,SAAS,CAACC,IAAQ;IAClBC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;EAEjB;EAGAG,aAAa,CAACC,KAAS,GAEvB;CACC;AA7CYtC,wBAAwB,eALpCF,SAAS,CAAC;EACTyC,QAAQ,EAAE,sBAAsB;EAChCC,WAAW,EAAE,mCAAmC;EAChDC,SAAS,EAAE,CAAC,mCAAmC;CAChD,CAAC,GACWzC,wBAAwB,CA6CpC;SA7CYA,wBAAwB","names":["Component","Validators","SellerDashboardComponent","constructor","sellerSer","IS","router","fb","sellerAddProduct","group","item_name","control","required","item_price","item_discount","item_qty","item_image","item_dsc","ngOnInit","checkSeller","getItems","seller","localStorage","getItem","sellerVerify","JSON","parse","data","id","sellerActive","emit","subscribe","res","itemList","Result","UpdatePro","item","console","log","ProductUpdate","value","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["E:\\AngularWithLaravelAPI\\AngularFrontEnd\\src\\app\\components\\seller-dashboard\\seller-dashboard.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { ItemServiceService } from 'src/app/services/item-service.service';\nimport { SellerService } from 'src/app/services/seller.service';\n\n@Component({\n  selector: 'app-seller-dashboard',\n  templateUrl: './seller-dashboard.component.html',\n  styleUrls: ['./seller-dashboard.component.scss']\n})\nexport class SellerDashboardComponent implements OnInit {\nitemList:any;\nsellerAddProduct : FormGroup;\n\nconstructor(private sellerSer:SellerService, private IS:ItemServiceService, private router:Router, private fb:For ){\n  this.sellerAddProduct = this.fb.group({\n    item_name : this.fb.control('',[Validators.required]),\n    item_price : this.fb.control('',[Validators.required]),\n    item_discount : this.fb.control('',[Validators.required]),\n    item_qty : this.fb.control('',[Validators.required]),\n    item_image : this.fb.control('',[Validators.required]),\n    item_dsc : this.fb.control('',[Validators.required]),\n  })\n}\n\nngOnInit(): void {\n  this.checkSeller();\n  this.getItems();\n}\n\ncheckSeller(){\n  let seller = localStorage.getItem(\"seller\");\n  let sellerVerify = seller && JSON.parse(seller).data.id\n  if(sellerVerify){\n this.sellerSer.sellerActive.emit(true);\n}\n}\n\n\n\ngetItems() {\n  this.IS.getItems().subscribe((res: any) => {\n    this.itemList = res.Result;\n  })\n}\n\nUpdatePro(item:any){\nconsole.log(item);\n\n}\n\n\nProductUpdate(value:any){\n\n}\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}