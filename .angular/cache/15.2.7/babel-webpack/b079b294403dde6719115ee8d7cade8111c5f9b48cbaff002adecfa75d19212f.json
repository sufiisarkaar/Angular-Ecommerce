{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component, HostListener } from '@angular/core';\nlet HeaderComponent = class HeaderComponent {\n  constructor(itemSer, route, toaster, sellerSer) {\n    this.itemSer = itemSer;\n    this.route = route;\n    this.toaster = toaster;\n    this.sellerSer = sellerSer;\n    this.cartCount = 0;\n    this.bgColor = 'transparent'; // Initial background color\n  }\n\n  ngOnInit() {\n    this.cartItemsCount();\n    this.checkUser();\n    this.emitUser();\n    this.checkSeller();\n    this.checkSellerActive();\n  }\n  onScroll(event) {\n    if (window.pageYOffset > 50) {\n      this.bgColor = '#ffff'; // Change background color after scrolling 50px\n    } else {\n      this.bgColor = 'transparent'; // Change background color back to transparent\n    }\n  }\n\n  cartItemsCount() {\n    let cartData = localStorage.getItem(\"MyItems\");\n    if (cartData) {\n      this.cartCount = JSON.parse(cartData).length;\n    }\n    this.itemSer.cardData.subscribe(item => {\n      this.cartCount = item.length;\n    });\n  }\n  checkUser() {\n    this.itemSer.ActiveUser.subscribe(res => {\n      this.ActiveUser = res;\n    });\n  }\n  checkSellerActive() {\n    this.sellerSer.sellerActive.subscribe(res => {\n      this.sellerActive = res;\n    });\n  }\n  emitUser() {\n    let user = localStorage.getItem(\"user\");\n    let userVerify = user && JSON.parse(user).data.id;\n    if (userVerify) {\n      this.itemSer.ActiveUser.emit(true);\n    }\n  }\n  logOut() {\n    localStorage.removeItem(\"user\");\n    localStorage.removeItem(\"seller\");\n    this.sellerSer.sellerActive.emit(false);\n    this.itemSer.ActiveUser.emit(false);\n    this.toaster.LogOutSuccess();\n    this.route.navigate(['/login']);\n  }\n  checkSeller() {\n    let seller = localStorage.getItem(\"seller\");\n    let sellerVerify = seller && JSON.parse(seller).data.id;\n    if (sellerVerify) {\n      this.sellerSer.sellerActive.emit(true);\n    }\n  }\n};\n__decorate([HostListener('window:scroll', ['$event'])], HeaderComponent.prototype, \"onScroll\", null);\nHeaderComponent = __decorate([Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss']\n})], HeaderComponent);\nexport { HeaderComponent };","map":{"version":3,"mappings":"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","names":["Component","HostListener","HeaderComponent","constructor","itemSer","route","toaster","sellerSer","ngOnInit","cartItemsCount","checkUser","emitUser","checkSeller","checkSellerActive","onScroll","event","window","pageYOffset","bgColor","cartData","localStorage","getItem","cartCount","JSON","parse","length","cardData","subscribe","item","ActiveUser","res","sellerActive","user","userVerify","data","id","emit","logOut","removeItem","LogOutSuccess","navigate","seller","sellerVerify","__decorate","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["E:\\AngularWithLaravelAPI\\AngularFrontEnd\\src\\app\\components\\header\\header.component.ts"],"sourcesContent":["import { Component, HostListener, Injectable, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { ItemServiceService } from 'src/app/services/item-service.service';\nimport { SellerService } from 'src/app/services/seller.service';\nimport { ToasterService } from 'src/app/services/toaster.service';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss']\n})\n\n\nexport class HeaderComponent implements OnInit {\n  sellerActive:any;\n ActiveUser:any;\n  cartCount: number = 0;\n  bgColor = 'transparent'; // Initial background color\n  constructor(private itemSer: ItemServiceService, private route:Router, private toaster:ToasterService, private sellerSer:SellerService) { }\n\n  ngOnInit() {\n    this.cartItemsCount();\n    this.checkUser();\n    this.emitUser();\n    this.checkSeller();\n    this.checkSellerActive();\n  }\n\n  @HostListener('window:scroll', ['$event'])\n  onScroll(event: any) {\n    if (window.pageYOffset > 50) {\n      this.bgColor = '#ffff'; // Change background color after scrolling 50px\n    } else {\n      this.bgColor = 'transparent'; // Change background color back to transparent\n    }\n  }\n\n\n  cartItemsCount() {\n    let cartData = localStorage.getItem(\"MyItems\");\n    if (cartData) {\n      this.cartCount = JSON.parse(cartData).length;\n    }\n    this.itemSer.cardData.subscribe((item) => {\n      this.cartCount = item.length;\n    })\n  }\n\n\n  checkUser() {\n\n   this.itemSer.ActiveUser.subscribe((res)=>{\n     this.ActiveUser = res;\n    })\n\n  }\n\n\n\n  checkSellerActive(){\nthis.sellerSer.sellerActive.subscribe((res:any)=>{\n  this.sellerActive = res;\n})\n  }\n\n\n  emitUser() {\n    let user = localStorage.getItem(\"user\");\n    let userVerify = user && JSON.parse(user).data.id\n    if(userVerify){\n   this.itemSer.ActiveUser.emit(true);\n  }\n  }\n\n\n  logOut(){\n    localStorage.removeItem(\"user\");\n    localStorage.removeItem(\"seller\");\n    this.sellerSer.sellerActive.emit(false);\n    this.itemSer.ActiveUser.emit(false);\n    this.toaster.LogOutSuccess();\n    this.route.navigate(['/login'])\n  }\n\n  checkSeller(){\n    let seller = localStorage.getItem(\"seller\");\n    let sellerVerify = seller && JSON.parse(seller).data.id\n    if(sellerVerify){\n   this.sellerSer.sellerActive.emit(true);\n  }\n  }\n\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}