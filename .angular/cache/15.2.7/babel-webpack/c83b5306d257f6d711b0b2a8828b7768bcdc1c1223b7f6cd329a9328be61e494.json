{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"./toaster.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"./item-service.service\";\nexport class SellerService {\n  constructor(http, toaster, router, itemSer) {\n    this.http = http;\n    this.toaster = toaster;\n    this.router = router;\n    this.itemSer = itemSer;\n    this.sellerActive = new EventEmitter();\n    this.localURL = \"http://localhost:8000/api\";\n  }\n  sellerSignup(data) {\n    return this.http.post(`${this.localURL}/sellerSignup`, data);\n  }\n  sellerLogin(data) {\n    this.http.post(`${this.localURL}/sellerLogin`, data, {\n      observe: 'response'\n    }).subscribe(result => {\n      if (!result.body.error) {\n        localStorage.setItem('seller', JSON.stringify(result.body));\n        this.toaster.LoginSuccess(result.body.success);\n        setTimeout(() => {\n          this.router.navigateByUrl(\"seller_dashboard\");\n        }, 2000);\n        this.itemSer.ActiveUser.emit(true);\n      } else {\n        this.toaster.LoginFail(result.body.error);\n      }\n    });\n  }\n  addProduct(data) {\n    return this.http.post(`${this.localURL}/addProduct`, data);\n  }\n  updateProduct(id, data) {\n    return this.http.put('http://localhost:8000/api/updateProduct/' + id, data);\n  }\n  deleteProduct(id) {\n    return this.http.delete(`${this.localURL}/deleteProductByID/` + id);\n  }\n}\nSellerService.ɵfac = function SellerService_Factory(t) {\n  return new (t || SellerService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.ToasterService), i0.ɵɵinject(i3.Router), i0.ɵɵinject(i4.ItemServiceService));\n};\nSellerService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: SellerService,\n  factory: SellerService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AACA,SAASA,YAAY,QAAoB,eAAe;;;;;;AAQxD,OAAM,MAAOC,aAAa;EAGxBC,YAAoBC,IAAgB,EAAUC,OAAsB,EAAUC,MAAa,EAAUC,OAA0B;IAA3G,SAAI,GAAJH,IAAI;IAAsB,YAAO,GAAPC,OAAO;IAAyB,WAAM,GAANC,MAAM;IAAiB,YAAO,GAAPC,OAAO;IAF9G,iBAAY,GAAG,IAAIN,YAAY,EAAW;IACxC,aAAQ,GAAO,2BAA2B;EACyF;EAEnIO,YAAY,CAACC,IAAQ;IACvB,OAAO,IAAI,CAACL,IAAI,CAACM,IAAI,CAAC,GAAG,IAAI,CAACC,QAAQ,eAAe,EAACF,IAAI,CAAC;EACzD;EAIAG,WAAW,CAACH,IAAS;IACnB,IAAI,CAACL,IAAI,CAACM,IAAI,CAAC,GAAG,IAAI,CAACC,QAAQ,cAAc,EAAEF,IAAI,EAAE;MAAEI,OAAO,EAAE;IAAU,CAAE,CAAC,CAACC,SAAS,CAAEC,MAAU,IAAI;MACrG,IAAI,CAACA,MAAM,CAACC,IAAI,CAACC,KAAK,EAAE;QACtBC,YAAY,CAACC,OAAO,CAAC,QAAQ,EAAEC,IAAI,CAACC,SAAS,CAACN,MAAM,CAACC,IAAI,CAAC,CAAC;QAC3D,IAAI,CAACX,OAAO,CAACiB,YAAY,CAACP,MAAM,CAACC,IAAI,CAACO,OAAO,CAAC;QAC9CC,UAAU,CAAC,MAAI;UACb,IAAI,CAAClB,MAAM,CAACmB,aAAa,CAAC,kBAAkB,CAAC;QAC/C,CAAC,EAAC,IAAI,CAAC;QAEX,IAAI,CAAClB,OAAO,CAACmB,UAAU,CAACC,IAAI,CAAC,IAAI,CAAC;OAG/B,MAAI;QACH,IAAI,CAACtB,OAAO,CAACuB,SAAS,CAACb,MAAM,CAACC,IAAI,CAACC,KAAK,CAAC;;IAE7C,CAAC,CAAC;EACJ;EAGAY,UAAU,CAACpB,IAAQ;IACrB,OAAO,IAAI,CAACL,IAAI,CAACM,IAAI,CAAC,GAAG,IAAI,CAACC,QAAQ,aAAa,EAACF,IAAI,CAAC;EACvD;EAIAqB,aAAa,CAACC,EAAM,EAAEtB,IAAQ;IAC5B,OAAO,IAAI,CAACL,IAAI,CAAC4B,GAAG,CAAC,0CAA0C,GAACD,EAAE,EAAEtB,IAAI,CAAE;EAC5E;EAEAwB,aAAa,CAACF,EAAM;IACtB,OAAO,IAAI,CAAC3B,IAAI,CAAC8B,MAAM,CAAC,GAAG,IAAI,CAACvB,QAAQ,qBAAqB,GAACoB,EAAE,CAAC;EAC/D;;AA1CW7B,aAAa;mBAAbA,aAAa;AAAA;AAAbA,aAAa;SAAbA,aAAa;EAAAiC,SAAbjC,aAAa;EAAAkC,YAFZ;AAAM","names":["EventEmitter","SellerService","constructor","http","toaster","router","itemSer","sellerSignup","data","post","localURL","sellerLogin","observe","subscribe","result","body","error","localStorage","setItem","JSON","stringify","LoginSuccess","success","setTimeout","navigateByUrl","ActiveUser","emit","LoginFail","addProduct","updateProduct","id","put","deleteProduct","delete","factory","providedIn"],"sourceRoot":"","sources":["E:\\AngularWithLaravelAPI\\AngularFrontEnd\\src\\app\\services\\seller.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { EventEmitter, Injectable } from '@angular/core';\nimport { ToasterService } from './toaster.service';\nimport { Route, Router } from '@angular/router';\nimport { ItemServiceService } from './item-service.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SellerService {\nsellerActive = new EventEmitter<boolean>();\n  localURL:any = \"http://localhost:8000/api\";\n  constructor(private http: HttpClient, private toaster:ToasterService, private router:Router, private itemSer:ItemServiceService) { }\n\n  sellerSignup(data:any){\nreturn this.http.post(`${this.localURL}/sellerSignup`,data)\n  }\n\n\n\n  sellerLogin(data: any) {\n    this.http.post(`${this.localURL}/sellerLogin`, data, { observe: 'response' }).subscribe((result:any) => {\n      if (!result.body.error) {\n        localStorage.setItem('seller', JSON.stringify(result.body));\n        this.toaster.LoginSuccess(result.body.success);\n        setTimeout(()=>{\n          this.router.navigateByUrl(\"seller_dashboard\");\n        },2000);\n\n    this.itemSer.ActiveUser.emit(true);\n\n\n      }else{\n        this.toaster.LoginFail(result.body.error);\n      }\n    });\n  }\n\n\n  addProduct(data:any){\nreturn this.http.post(`${this.localURL}/addProduct`,data);\n  }\n\n\n\n  updateProduct(id:any, data:any){\n    return this.http.put('http://localhost:8000/api/updateProduct/'+id, data )\n  }\n\n  deleteProduct(id:any){\nreturn this.http.delete(`${this.localURL}/deleteProductByID/`+id)\n  }\n\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}