{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nexport class UserGuard {\n  constructor(router) {\n    this.router = router;\n  }\n  canActivate(route, state) {\n    let user = localStorage.getItem(\"seller\");\n    let userID = user && JSON.parse(user).data.id;\n    if (userID) {\n      return true;\n    }\n    this.router.navigateByUrl(\"login\");\n    return false;\n  }\n}\nUserGuard.ɵfac = function UserGuard_Factory(t) {\n  return new (t || UserGuard)(i0.ɵɵinject(i1.Router));\n};\nUserGuard.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: UserGuard,\n  factory: UserGuard.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;AAOA,OAAM,MAAOA,SAAS;EACpBC,YAAoBC,MAAa;IAAb,WAAM,GAANA,MAAM;EAE1B;EAEAC,WAAW,CACTC,KAA6B,EAC7BC,KAA0B;IAExB,IAAIC,IAAI,GAAGC,YAAY,CAACC,OAAO,CAAC,QAAQ,CAAC;IACzC,IAAIC,MAAM,GAAGH,IAAI,IAAII,IAAI,CAACC,KAAK,CAACL,IAAI,CAAC,CAACM,IAAI,CAACC,EAAE;IAC7C,IAAGJ,MAAM,EAAC;MAER,OAAO,IAAI;;IAIb,IAAI,CAACP,MAAM,CAACY,aAAa,CAAC,OAAO,CAAC;IAClC,OAAO,KAAK;EAChB;;AAnBWd,SAAS;mBAATA,SAAS;AAAA;AAATA,SAAS;SAATA,SAAS;EAAAe,SAATf,SAAS;EAAAgB,YAFR;AAAM","names":["UserGuard","constructor","router","canActivate","route","state","user","localStorage","getItem","userID","JSON","parse","data","id","navigateByUrl","factory","providedIn"],"sourceRoot":"","sources":["E:\\AngularWithLaravelAPI\\AngularFrontEnd\\src\\app\\Auth\\user.guard.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserGuard implements CanActivate {\n  constructor(private router:Router){\n\n  }\n\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n\n      let user = localStorage.getItem(\"seller\");\n      let userID = user && JSON.parse(user).data.id;\n      if(userID){\n\n        return true;\n\n      }\n\n      this.router.navigateByUrl(\"login\")\n      return false;\n  }\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}