{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"ngx-toastr\";\nexport class ToasterService {\n  constructor(toaster) {\n    this.toaster = toaster;\n  }\n  QuantityUpdatedPlus(name) {\n    this.toaster.info('One More Quantity Addded ' + name, 'FoodCounter Says!');\n  }\n  QuantityUpdatedMinus(name) {\n    this.toaster.warning('One Quantity Discrease ' + name, 'FoodCounter Says!');\n  }\n  LoginSuccess(message) {\n    this.toaster.success('FoodCounter Says!...  Wait.. You will redirect to Dashboard', message);\n  }\n  LoginFail(message) {\n    this.toaster.error(message, 'FoodCounter Says!');\n  }\n  RegisterSuccess(message) {\n    this.toaster.success(message, 'FoodCounter Says!');\n  }\n  RegisterFail(message) {\n    this.toaster.error(message + 'Email Or Phone Already Exists', 'FoodCounter Says!');\n  }\n  AddToCartSuccess(item) {\n    this.toaster.success(item + ' Added To Cart!', 'FoodCounter Says!');\n  }\n  AddToCartFail(item) {\n    this.toaster.error(item + ' Already Exist In Cart', 'FoodCounter Says!');\n  }\n  RemoveCart(item) {\n    this.toaster.error(item + ' Remove To Cart!', 'FoodCounter Says!');\n  }\n  ProfileUpdateSuccess() {\n    this.toaster.info('Profile Updated', 'FoodCounter Says!');\n  }\n  ProfileUpdateFail() {\n    this.toaster.error('Profile Not Updated', 'FoodCounter Says!');\n  }\n}\nToasterService.ɵfac = function ToasterService_Factory(t) {\n  return new (t || ToasterService)(i0.ɵɵinject(i1.ToastrService));\n};\nToasterService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ToasterService,\n  factory: ToasterService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;AAMA,OAAM,MAAOA,cAAc;EAEzBC,YAAoBC,OAAqB;IAArB,YAAO,GAAPA,OAAO;EAE3B;EAGAC,mBAAmB,CAACC,IAAQ;IAC1B,IAAI,CAACF,OAAO,CAACG,IAAI,CAAC,2BAA2B,GAAED,IAAI,EAAE,mBAAmB,CAAC;EAC3E;EAEAE,oBAAoB,CAACF,IAAQ;IAC3B,IAAI,CAACF,OAAO,CAACK,OAAO,CAAC,yBAAyB,GAAEH,IAAI,EAAE,mBAAmB,CAAC;EAC5E;EAEAI,YAAY,CAACC,OAAW;IACtB,IAAI,CAACP,OAAO,CAACQ,OAAO,CAAC,6DAA6D,EAACD,OAAO,CAAC;EAC7F;EAEAE,SAAS,CAACF,OAAW;IACnB,IAAI,CAACP,OAAO,CAACU,KAAK,CAACH,OAAO,EAAE,mBAAmB,CAAC;EAClD;EAGDI,eAAe,CAACJ,OAAW;IACxB,IAAI,CAACP,OAAO,CAACQ,OAAO,CAACD,OAAO,EAAE,mBAAmB,CAAC;EACpD;EAEAK,YAAY,CAACL,OAAW;IACtB,IAAI,CAACP,OAAO,CAACU,KAAK,CAACH,OAAO,GAAG,+BAA+B,EAAE,mBAAmB,CAAC;EACpF;EAEAM,gBAAgB,CAACC,IAAQ;IACvB,IAAI,CAACd,OAAO,CAACQ,OAAO,CAACM,IAAI,GAAG,iBAAiB,EAAE,mBAAmB,CAAC;EACrE;EAEAC,aAAa,CAACD,IAAQ;IACpB,IAAI,CAACd,OAAO,CAACU,KAAK,CAACI,IAAI,GAAG,wBAAwB,EAAE,mBAAmB,CAAC;EAC1E;EAEAE,UAAU,CAACF,IAAQ;IACjB,IAAI,CAACd,OAAO,CAACU,KAAK,CAACI,IAAI,GAAG,kBAAkB,EAAE,mBAAmB,CAAC;EACpE;EAGAG,oBAAoB;IAClB,IAAI,CAACjB,OAAO,CAACG,IAAI,CAAC,iBAAiB,EAAE,mBAAmB,CAAC;EAC3D;EAEAe,iBAAiB;IACf,IAAI,CAAClB,OAAO,CAACU,KAAK,CAAC,qBAAqB,EAAE,mBAAmB,CAAC;EAChE;;AAnDWZ,cAAc;mBAAdA,cAAc;AAAA;AAAdA,cAAc;SAAdA,cAAc;EAAAqB,SAAdrB,cAAc;EAAAsB,YAFb;AAAM","names":["ToasterService","constructor","toaster","QuantityUpdatedPlus","name","info","QuantityUpdatedMinus","warning","LoginSuccess","message","success","LoginFail","error","RegisterSuccess","RegisterFail","AddToCartSuccess","item","AddToCartFail","RemoveCart","ProfileUpdateSuccess","ProfileUpdateFail","factory","providedIn"],"sourceRoot":"","sources":["E:\\AngularWithLaravelAPI\\AngularFrontEnd\\src\\app\\services\\toaster.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport {  ToastrService } from 'ngx-toastr';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ToasterService {\n\n  constructor(private toaster:ToastrService) {\n\n  }\n\n\n  QuantityUpdatedPlus(name:any) {\n    this.toaster.info('One More Quantity Addded ' +name, 'FoodCounter Says!');\n  }\n\n  QuantityUpdatedMinus(name:any) {\n    this.toaster.warning('One Quantity Discrease ' +name, 'FoodCounter Says!');\n  }\n\n  LoginSuccess(message:any) {\n    this.toaster.success('FoodCounter Says!...  Wait.. You will redirect to Dashboard',message);\n  }\n\n  LoginFail(message:any) {\n    this.toaster.error(message, 'FoodCounter Says!');\n  }\n\n\n RegisterSuccess(message:any) {\n    this.toaster.success(message, 'FoodCounter Says!');\n  }\n\n  RegisterFail(message:any) {\n    this.toaster.error(message + 'Email Or Phone Already Exists', 'FoodCounter Says!');\n  }\n\n  AddToCartSuccess(item:any) {\n    this.toaster.success(item + ' Added To Cart!', 'FoodCounter Says!');\n  }\n\n  AddToCartFail(item:any) {\n    this.toaster.error(item + ' Already Exist In Cart', 'FoodCounter Says!');\n  }\n\n  RemoveCart(item:any) {\n    this.toaster.error(item + ' Remove To Cart!', 'FoodCounter Says!');\n  }\n\n\n  ProfileUpdateSuccess() {\n    this.toaster.info('Profile Updated', 'FoodCounter Says!');\n  }\n\n  ProfileUpdateFail() {\n    this.toaster.error('Profile Not Updated', 'FoodCounter Says!');\n  }\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}