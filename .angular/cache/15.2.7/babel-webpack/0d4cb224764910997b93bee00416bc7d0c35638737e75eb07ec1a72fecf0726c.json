{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { Validators } from '@angular/forms';\nlet SellerDashboardComponent = class SellerDashboardComponent {\n  constructor(sellerSer, IS, router, fb, dailog) {\n    this.sellerSer = sellerSer;\n    this.IS = IS;\n    this.router = router;\n    this.fb = fb;\n    this.dailog = dailog;\n    this.updateOBJ = {\n      item_name: '',\n      item_price: '',\n      item_discount: '',\n      item_dsc: '',\n      item_qty: '',\n      item_image: ''\n    };\n    this.updateProduct = this.fb.group({\n      item_name: this.fb.control('', [Validators.required]),\n      item_price: this.fb.control('', [Validators.required]),\n      item_discount: this.fb.control('', [Validators.required]),\n      item_qty: this.fb.control('', [Validators.required]),\n      item_image: this.fb.control('', [Validators.required]),\n      item_dsc: this.fb.control('', [Validators.required])\n    });\n  }\n  ngOnInit() {\n    this.checkSeller();\n    this.getItems();\n  }\n  checkSeller() {\n    let seller = localStorage.getItem(\"seller\");\n    let sellerVerify = seller && JSON.parse(seller).data.id;\n    if (sellerVerify) {\n      this.sellerSer.sellerActive.emit(true);\n    }\n  }\n  getItems() {\n    this.IS.getItems().subscribe(res => {\n      this.itemList = res.Result;\n    });\n  }\n  UpdatePro(item, UpdateProduct) {\n    this.updatedID = item.id;\n    this.updateOBJ = item;\n    this.dailog.open(UpdateProduct, {\n      width: '550px'\n    });\n    console.log(this.updateOBJ, item, \"itemmm\");\n  }\n  ProductUpdate(value) {\n    this.sellerSer.updateProduct(this.updatedID, value).subscribe(res => {\n      console.log(res, \"resss\");\n    });\n  }\n  deleteProduct() {\n    console.log(this.updatedID, \"DELETE\");\n  }\n};\nSellerDashboardComponent = __decorate([Component({\n  selector: 'app-seller-dashboard',\n  templateUrl: './seller-dashboard.component.html',\n  styleUrls: ['./seller-dashboard.component.scss']\n})], SellerDashboardComponent);\nexport { SellerDashboardComponent };","map":{"version":3,"mappings":"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","names":["Component","Validators","SellerDashboardComponent","constructor","sellerSer","IS","router","fb","dailog","item_name","item_price","item_discount","item_dsc","item_qty","item_image","updateProduct","group","control","required","ngOnInit","checkSeller","getItems","seller","localStorage","getItem","sellerVerify","JSON","parse","data","id","sellerActive","emit","subscribe","res","itemList","Result","UpdatePro","item","UpdateProduct","updatedID","updateOBJ","open","width","console","log","ProductUpdate","value","deleteProduct","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["E:\\AngularWithLaravelAPI\\AngularFrontEnd\\src\\app\\components\\seller-dashboard\\seller-dashboard.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\nimport { Router } from '@angular/router';\nimport { ItemServiceService } from 'src/app/services/item-service.service';\nimport { SellerService } from 'src/app/services/seller.service';\n\n@Component({\n  selector: 'app-seller-dashboard',\n  templateUrl: './seller-dashboard.component.html',\n  styleUrls: ['./seller-dashboard.component.scss']\n})\nexport class SellerDashboardComponent implements OnInit {\nitemList:any;\nupdateProduct : FormGroup;\nupdatedID:any;\n\nupdateOBJ:any = {\n  item_name: '',\n  item_price: '',\n  item_discount: '',\n  item_dsc: '',\n  item_qty: '',\n  item_image: '',\n}\n\nconstructor(private sellerSer:SellerService, private IS:ItemServiceService, private router:Router, private fb:FormBuilder, private dailog:MatDialog ){\n  this.updateProduct = this.fb.group({\n    item_name : this.fb.control('',[Validators.required]),\n    item_price : this.fb.control('',[Validators.required]),\n    item_discount : this.fb.control('',[Validators.required]),\n    item_qty : this.fb.control('',[Validators.required]),\n    item_image : this.fb.control('',[Validators.required]),\n    item_dsc : this.fb.control('',[Validators.required]),\n  })\n}\n\nngOnInit(): void {\n  this.checkSeller();\n  this.getItems();\n}\n\ncheckSeller(){\n  let seller = localStorage.getItem(\"seller\");\n  let sellerVerify = seller && JSON.parse(seller).data.id\n  if(sellerVerify){\n this.sellerSer.sellerActive.emit(true);\n}\n}\n\n\n\ngetItems() {\n  this.IS.getItems().subscribe((res: any) => {\n    this.itemList = res.Result;\n  })\n}\n\nUpdatePro(item:any, UpdateProduct:any){\n  this.updatedID = item.id;\n  this.updateOBJ =  item;\nthis.dailog.open(UpdateProduct,{\n  width:'550px'\n})\nconsole.log(this.updateOBJ,item,\"itemmm\");\n\n\n}\n\n\nProductUpdate(value:any){\nthis.sellerSer.updateProduct(this.updatedID,value).subscribe((res:any)=>{\n  console.log(res,\"resss\");\n\n})\n}\n\n\ndeleteProduct(){\nconsole.log(this.updatedID, \"DELETE\");\n\n}\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}