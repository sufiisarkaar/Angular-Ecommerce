{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"./toaster.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"./item-service.service\";\nexport class SellerService {\n  constructor(http, toaster, router, itemSer) {\n    this.http = http;\n    this.toaster = toaster;\n    this.router = router;\n    this.itemSer = itemSer;\n    this.$localURL = \"http://localhost:8000/api/\";\n  }\n  sellerSignup(data) {\n    return this.http.post(`{this.$localURL/sellerSignup}`, data);\n  }\n  sellerLogin(data) {\n    this.http.post(`{this.$localURL/sellerSignup}`, data, {\n      observe: 'response'\n    }).subscribe(result => {\n      if (!result.body.error) {\n        localStorage.setItem('seller', JSON.stringify(result.body));\n        this.toaster.LoginSuccess(result.body.success);\n        setTimeout(() => {\n          this.router.navigateByUrl(\"seller_dashboard\");\n        }, 2000);\n        this.itemSer.ActiveUser.emit(true);\n      } else {\n        this.toaster.LoginFail(result.body.error);\n      }\n    });\n  }\n}\nSellerService.ɵfac = function SellerService_Factory(t) {\n  return new (t || SellerService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.ToasterService), i0.ɵɵinject(i3.Router), i0.ɵɵinject(i4.ItemServiceService));\n};\nSellerService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: SellerService,\n  factory: SellerService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;;;;AASA,OAAM,MAAOA,aAAa;EAGxBC,YAAoBC,IAAgB,EAAUC,OAAsB,EAAUC,MAAa,EAAUC,OAA0B;IAA3G,SAAI,GAAJH,IAAI;IAAsB,YAAO,GAAPC,OAAO;IAAyB,WAAM,GAANC,MAAM;IAAiB,YAAO,GAAPC,OAAO;IAD5G,cAAS,GAAO,4BAA4B;EACuF;EAEnIC,YAAY,CAACC,IAAQ;IACvB,OAAO,IAAI,CAACL,IAAI,CAACM,IAAI,CAAC,+BAA+B,EAACD,IAAI,CAAC;EACzD;EAIAE,WAAW,CAACF,IAAS;IACnB,IAAI,CAACL,IAAI,CAACM,IAAI,CAAC,+BAA+B,EAAED,IAAI,EAAE;MAAEG,OAAO,EAAE;IAAU,CAAE,CAAC,CAACC,SAAS,CAAEC,MAAU,IAAI;MACtG,IAAI,CAACA,MAAM,CAACC,IAAI,CAACC,KAAK,EAAE;QACtBC,YAAY,CAACC,OAAO,CAAC,QAAQ,EAAEC,IAAI,CAACC,SAAS,CAACN,MAAM,CAACC,IAAI,CAAC,CAAC;QAC3D,IAAI,CAACV,OAAO,CAACgB,YAAY,CAACP,MAAM,CAACC,IAAI,CAACO,OAAO,CAAC;QAC9CC,UAAU,CAAC,MAAI;UACb,IAAI,CAACjB,MAAM,CAACkB,aAAa,CAAC,kBAAkB,CAAC;QAC/C,CAAC,EAAC,IAAI,CAAC;QAEX,IAAI,CAACjB,OAAO,CAACkB,UAAU,CAACC,IAAI,CAAC,IAAI,CAAC;OAG/B,MAAI;QACH,IAAI,CAACrB,OAAO,CAACsB,SAAS,CAACb,MAAM,CAACC,IAAI,CAACC,KAAK,CAAC;;IAE7C,CAAC,CAAC;EACJ;;AA3BWd,aAAa;mBAAbA,aAAa;AAAA;AAAbA,aAAa;SAAbA,aAAa;EAAA0B,SAAb1B,aAAa;EAAA2B,YAFZ;AAAM","names":["SellerService","constructor","http","toaster","router","itemSer","sellerSignup","data","post","sellerLogin","observe","subscribe","result","body","error","localStorage","setItem","JSON","stringify","LoginSuccess","success","setTimeout","navigateByUrl","ActiveUser","emit","LoginFail","factory","providedIn"],"sourceRoot":"","sources":["E:\\AngularWithLaravelAPI\\AngularFrontEnd\\src\\app\\services\\seller.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { ToasterService } from './toaster.service';\nimport { Route, Router } from '@angular/router';\nimport { ItemServiceService } from './item-service.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SellerService {\n\n  $localURL:any = \"http://localhost:8000/api/\";\n  constructor(private http: HttpClient, private toaster:ToasterService, private router:Router, private itemSer:ItemServiceService) { }\n\n  sellerSignup(data:any){\nreturn this.http.post(`{this.$localURL/sellerSignup}`,data)\n  }\n\n\n\n  sellerLogin(data: any) {\n    this.http.post(`{this.$localURL/sellerSignup}`, data, { observe: 'response' }).subscribe((result:any) => {\n      if (!result.body.error) {\n        localStorage.setItem('seller', JSON.stringify(result.body));\n        this.toaster.LoginSuccess(result.body.success);\n        setTimeout(()=>{\n          this.router.navigateByUrl(\"seller_dashboard\");\n        },2000);\n\n    this.itemSer.ActiveUser.emit(true);\n\n\n      }else{\n        this.toaster.LoginFail(result.body.error);\n      }\n    });\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}